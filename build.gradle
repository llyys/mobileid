apply plugin: 'java'
apply plugin: 'maven'

group = 'com.codeborne'
archivesBaseName = 'mobileid'
version = '1.0.0'
sourceCompatibility = 1.7
targetCompatibility = 1.7

defaultTasks 'clean', 'copy-libs', 'copy-test-libs', 'test', 'install'

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }
    test {
        java {
            srcDir 'test'
        }
    }
}

compileJava.options.debugOptions.debugLevel = "source,lines,vars"
[compileJava, compileTestJava, javadoc]*.options.collect { options ->
    options.encoding = 'UTF-8'
}

[compileJava, compileTestJava]*.options.collect { options ->
    options.debug = true
    options.deprecation = true
    options.compilerArgs.add '-Xlint'
    options.compilerArgs.add '-Xlint:-unchecked'
    options.compilerArgs.add '-Xlint:-serial'
    options.compilerArgs.add '-Xlint:-rawtypes'
}

dependencies {
    compile 'org.apache.axis:axis:1.4'
    compile 'org.apache.axis:axis-jaxrpc:1.4'
    compile 'org.apache.commons:commons-io:1.3.2'
    compile 'org.apache.commons:commons-lang3:3.1'
    compile 'org.apache.commons:commons-compress:1.3'
    compile 'commons-codec:commons-codec:1.8'
    compile 'commons-discovery:commons-discovery:0.4'
    compile 'wsdl4j:wsdl4j:1.6.2'
    compile 'log4j:log4j:1.2.17'
    compile 'org.jdom:jdom2:2.0.5'
    compile 'javax.servlet:servlet-api:2.5'


    compile files('lib/digidoc4j-1.0.0.jar')
    compile 'org.slf4j:slf4j-simple:1.7.13'
    compile 'commons-cli:commons-cli:1.3'
    compile 'commons-io:commons-io:2.4'
    compile 'commons-lang:commons-lang:2.6'
    compile 'org.yaml:snakeyaml:1.14'
    compile 'org.bouncycastle:bcmail-jdk15on:1.51'
    compile 'org.bouncycastle:bcpkix-jdk15on:1.51'
    compile 'org.bouncycastle:bcprov-jdk15on:1.51'
    compile 'org.apache.httpcomponents:httpclient:4.3'
    compile 'org.apache.httpcomponents:httpcore:4.3'
    compile 'org.apache.santuario:xmlsec:2.0.5'
    compile 'xalan:serializer:2.7.2'
    compile 'xalan:xalan:2.7.2'
    compile 'org.codehaus.janino:janino:2.7.8'
    compile 'org.codehaus.janino:commons-compiler:2.7.8'
    compile 'org.yaml:snakeyaml:1.14'
    compile 'org.slf4j:slf4j-api:1.7.13'

    compile 'org.hamcrest:hamcrest-core:1.3'
    compile 'org.hamcrest:hamcrest-library:1.3'
    compile 'com.github.stefanbirkner:system-rules:1.5.0'

    compile 'org.apache.pdfbox:pdfbox:1.8.10'
    compile 'org.apache.pdfbox:jempbox:1.8.10'
    compile 'org.apache.pdfbox:pdfbox:1.8.10'
    compile 'javax.xml.bind:jaxb-api:2.2.11'
    compile 'com.sun.xml.bind:jaxb-core:2.2.11'
    compile 'javax.activation:activation:1.1.1'
    compile 'stax:stax-api:1.0.1'
    compile 'org.apache.directory.api:api-ldap-model:1.0.0-M32'
    compile 'org.codehaus.woodstox:stax2-api:3.1.4'
    compile 'org.codehaus.woodstox:woodstox-core-asl:4.4.1'
    compile 'xerces:xercesImpl:2.11.0'
    compile 'xml-apis:xml-apis:1.4.01'
    compile 'org.apache.mina:mina-core:2.0.9'
    //compile 'org.ow2.asm:asm:3.2'

    //compile 'org.slf4j:jcl-over-slf4j:1.7'
    //compile 'org.apache.directory.api:api-ldap-client-api:1.0.0'
    //compile 'org.apache.commons:commons-dbcp2:2.1'
    //compile 'org.apache.commons:commons-pool2:2.2'
    //compile 'org.easytesting:fest-assert:1.4'
    //compile 'org.easytesting:fest-util:1.2.5'
    //  compile 'org.fontbox:fontbox:0.1.0'
    //compile 'org.hsqldb:hsqldb:1.8.0.10'
    //compile 'org.slf4j:jcl-over-slf4j:1.7.7'

    compile files('lib/dss-common-4.4.RC2.d4j.3.jar')
    compile files('lib/dss-diagnostic-jaxb-4.4.RC2.d4j.3.jar')
    compile files('lib/dss-document-4.4.RC2.d4j.3.jar')
    compile files('lib/dss-service-4.4.RC2.d4j.3.jar')
    compile files('lib/dss-spi-4.4.RC2.d4j.3.jar')
    compile files('lib/dss-tsl-jaxb-4.4.RC2.d4j.3.jar')
    compile files('lib/jacocoagent.jar')
    compile files('lib/jacocoant.jar')
    compile files('lib/jdigidoc-3.10.0-777.jar')


    testCompile 'junit:junit:4.10'
    testCompile 'org.hamcrest:hamcrest-all:1.1'
    testCompile 'org.mockito:mockito-all:1.9.0'
}

task 'copy-libs'(type: Sync) {
    from configurations.compile
    into "$buildDir/libs"
}

task 'copy-test-libs'(type: Sync) {
    from configurations.testCompile
    into "$buildDir/libs-test"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.0-milestone-8a'
    jarFile = './gradle-wrapper/gradle-wrapper.jar'
    scriptFile = './gradle'
}

//fixes Intellij IDEA dependencies not being updated when gradle deps updated.
allprojects {
    apply plugin: 'idea'
}
